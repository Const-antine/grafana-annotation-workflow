name: Reusable Grafana Terraform workflow Production

on:
  workflow_call:
    inputs:
      # "[\"terraform\",\"${{ github.event.repository.name }}\",\"production\"]"
      annotation_tags:
        type: string
        required: true
      # "Alerts Statistics" 
      dashboard_name:
        type: string
        required: true
      # https://grafana.domain.com/api 
      grafana_url:
        type: string
        required: true
      # "Firing 'Warning' alerts"
      panel_name:
        type: string
        required: true
      # "[\"self-hosted\",\"linux\",\"x64\",\"production\",\"terraform\",\"workflows\"]"
      runner_tags:
        type: string
        required: true
    secrets:
      grafana_token:
        required: true

jobs:
  grafana_terraform_annotation:
    name: "Add Terraform annotations to Grafana"
    env:
      GRAFANA_API_URL: ${{ inputs.grafana_url }}
      GRAFANA_API_TOKEN: ${{ secrets.grafana_token }}
      FULL_COMMIT_MSG: ${{ github.event.head_commit.message }}
      DASHBOARD_NAME: ${{ inputs.dashboard_name }}
      PANEL_NAME: ${{ inputs.panel_name }}
    runs-on: ${{ fromJSON(inputs.runner_tags) }}
    steps:
    - name: Install dependencies
      run: |
        set -eu
        apt-get update -qq && DEBIAN_FRONTEND=noninteractive apt-get -y -qq install curl git jq < /dev/null > /dev/null
        PATH=$PATH:$(which git)
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Check if there are changes to Terraform
      shell: bash
      id: diff
      run: |
        set -x
        CHANGED_FILES=$(git diff --name-only ${{ github.event.before }}..${{ github.event.after }} | sort -u)
        echo $CHANGED_FILES | grep -q ".*\.tf$" && echo "::set-output name=terraform::true" || echo "::set-output name=terraform::false"
    - name: Get DASHBOARD/PANEL IDs
      if: steps.diff.outputs.terraform == 'true'
      id: ids
      shell: bash
      run: |
        set -eux
        readarray -t TITLE <<<"$FULL_COMMIT_MSG"
        CHANGES="<a href="https://github.com/$GITHUB_REPOSITORY/commit/$GITHUB_SHA">Details</a>"
        DASHBOARD_NAME=$(printf %s "$DASHBOARD_NAME" |jq -Rr @uri)
        DASHBOARD_UID=$(curl -s -H "Authorization: Bearer $GRAFANA_API_TOKEN" \
                        $GRAFANA_API_URL/search?query=$DASHBOARD_NAME \
                        | jq -r '.[0].uid')
        echo "::set-output name=dashboard::$(curl -s -H "Authorization: Bearer $GRAFANA_API_TOKEN" \
                                             $GRAFANA_API_URL/search?query=$DASHBOARD_NAME         \
                                             | jq -r '.[0].id')"
        echo "::set-output name=panel::$(curl -s -H "Authorization: Bearer $GRAFANA_API_TOKEN" \
                                         $GRAFANA_API_URL/dashboards/uid/$DASHBOARD_UID        \
                                         | jq --arg n "$PANEL_NAME" '.dashboard.panels[] | select(.title == $n) | .id')"
        echo "::set-output name=repo::$GITHUB_REPOSITORY"
        echo "::set-output name=text::"$TITLE - $CHANGES""
    - name: Add annotation Production
      if: steps.diff.outputs.terraform == 'true'
      shell: bash
      run: |
        generate_post_data() {
        cat <<EOF
        {
          "dashboardId":${{ steps.ids.outputs.dashboard }},
          "panelId":${{ steps.ids.outputs.panel }},
          "tags": ${{ inputs.annotation_tags }},
          "text":"${{ steps.ids.outputs.text }}"
        }
        EOF
        }
        curl -i \
        -H "Content-Type:application/json" \
        -H "Authorization: Bearer $GRAFANA_API_TOKEN" \
        -X POST --data "$(generate_post_data)" $GRAFANA_API_URL/annotations
